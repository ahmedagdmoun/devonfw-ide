# Name of the workflow
name: Release

# Runs manually with major version, minor version and patch as input
on:
  workflow_dispatch:
    inputs:
      major:
        description: 'major version'
        required: true
      minor:
        description: 'minor version'
        required: true
      patch:
        description: 'patch'
        required: true

jobs:
  release:
    name: Release on Sonatype OSS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with: # running setup-java again overwrites the settings.xml
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for username in deploy
          server-password: SONATYPE_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
          java-package: jdk
          architecture: x64
          check-latest: false
          overwrite-settings: true
          job-status: success

      - name: Publish to Apache Maven Central
        run: |
          gpg --keyserver hkp://keyserver.ubuntu.com --send-keys CDFACB0CF0AD43FB
          mvn -DskipTests deploy -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  # Create github release with the specified tag, name and body
  gitHub_release:
    name: create github release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: create gitHub release
        run: |
          maven_config="$(cat /home/runner/work/devonfw-ide/devonfw-ide/.mvn/maven.config)"
          prefix="-Drevision="
          version=${maven_config#"$prefix"}
          noDotVersion="${version//.}"
          gh release create ${version} --notes "# Download\n
                https://repo1.maven.org/maven2/com/devonfw/tools/ide/devonfw-ide-scripts/${version}.tar.gz\n\n
                # Changes\n
                https://github.com/devonfw/ide/blob/master/CHANGELOG.asciidoc#${noDotVersion}"
          git tag Release/"${version}"
          git push origin test Release/"${version}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

