name: Release

# Runs manually
on:
  workflow_dispatch:
    inputs:
      next-version:
        description: 'next version to be set'
        required: true
      
jobs:
  release:
    name: Release on Sonatype OSS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to Apache Maven Central
        run: |
          maven_config="$(cat .mvn/maven.config)"
          snapshot_version="${maven_config%% *}"
          suffix="-SNAPSHOT"
          version=${snapshot_version%"$suffix"}
          echo "${version}" > version
          sed -i "s/${snapshot_version}/${version}/" .mvn/maven.config
          mvn --settings .mvn/settings.xml deploy -Pdeploy -Dgpg.pin.entry.mode=loopback -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # Set next version & create github release
      - name: set next version & create gitHub release
        run: |
          version="$(cat version)"
          prefix="-Drevision="
          release_version=${version#"$prefix"}
          next_version="${{ github.event.inputs.next-version }}-SNAPSHOT"
          sed -i "s/${release_version}/${next_version}/" .mvn/maven.config
          git config --global user.email ${{ secrets.username }}
          git config --global user.name ${{ secrets.email }}
          git add -f .mvn/maven.config
          git commit -m "set next version to ${next_version}"
          git push

          noDotVersion="${release_version//.}"
          release_tag="release/${release_version}"
          git tag -a "release/${release_tag}" -m "tagged version ${release_version}"
          git push --tags
          gh release create "${release_tag}" --notes "# Download
          https://repo1.maven.org/maven2/com/devonfw/tools/ide/devonfw-ide-scripts/${release_version}/devonfw-ide-scripts-${release_version}.tar.gz
          # Changes
          https://github.com/devonfw/ide/blob/master/CHANGELOG.asciidoc#${noDotVersion}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}